default namespace = ""

start =
	element models {
		element project {
			attribute type { "project" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(attribute name { xsd:string }?
					| attribute paratextShortName { xsd:string }?
					| attribute paratextGuid { xsd:string }?
					| attribute languageBcp47 {
								xsd:string { pattern = "[a-z]{2,3}(-[A-Za-z]{4})?(-[A-Z]{2})?(-[a-z]+)?" }
							}
					| attribute languageName { xsd:string }?
					| attribute defaultFontFamily { xsd:string }?
					| attribute fontFeatures { xsd:string }?
					| attribute defaultFontSize {
								"medium" | "xx-small" | "x-small" | "small" | "large" | "x-large" | "xx-large"
							}?
					| attribute textDirection { "ltr" | "rtl" }?
					| attribute autoSync { xsd:boolean }?
					| attribute allowClaiming { xsd:boolean }?
					| attribute bookType {
								"Scripture" | "Scripture Story" | "Lexical" | "Didactic" | "Other" | "Test"
							}?
					| attribute destination { "audio" | "text" }?)*
			}?,
			element relationships {
				(element sets {
						element data {
							attribute type { "set" },
							attribute id { xsd:IDREF }
						}*
					}?
					| element users {
								element data {
									attribute type { "user" },
									attribute id { xsd:IDREF }
								}*
							}?)*
			}?
		}*,
		element set {
			attribute type { "set" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(attribute book { xsd:positiveInteger }?
					| attribute index { xsd:decimal }?)*,
				element setTitle { xsd:string }?
			}?,
			element relationships {
				(element tasks {
						element data {
							attribute type { "task" },
							attribute id { xsd:IDREF }
						}*
					}?)*
			}?
		}*,
		element task {
			attribute type { "task" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(
					## BBB-CCC-ssseee, PPP=project, BBB=Book, CCC=Chapter, sss=start, eee=end
					attribute reference {
						xsd:string { pattern = "[a-zA-Z0-9]{3} \d+:\d+-\d+" }
					}?
					| attribute book { xsd:positiveInteger }?
					| attribute position { xsd:decimal }?
					| attribute state { "Incomplete" | "Ready" | "Transcribe" | "Review" | "Upload" | "Complete" }
					| attribute hold { xsd:boolean }?),
				element title { xsd:string }?
			}?,
			element relationships {
				(element set {
						element data {
							attribute type { "set" },
							attribute id { xsd:IDREF }
						}
					}?
					| element assignedTo {
								element data {
									attribute type { "user" },
									attribute id { xsd:IDREF }
								}
							}?
					| element lastTranscriber {
								element data {
									attribute type { "user" },
									attribute id { xsd:IDREF }
								}
							}?
					| element lastReviewer {
								element data {
									attribute type { "user" },
									attribute id { xsd:IDREF }
								}
							}?
					| element events {
								element data {
									attribute type { "event" },
									attribute id { xsd:IDREF }
								}*
							}?
					| element medias {
								element data {
									attribute type { "media" },
									attribute id { xsd:IDREF }
								}*
							}?)*
			}?
		}*,
		element media {
			attribute type { "media" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(attribute number { xsd:positiveInteger }
					| attribute textQuality { "unacceptable" | "questionable" | "good" }?
					| attribute audioQuality { "redo" | "acceptable" | "high" }?
					| attribute duration { xsd:decimal })*,
				element transcription { xsd:string }?
			}?,
			element links {
				(attribute eafUrl { xsd:anyURI }?
					| attribute audioUrl { xsd:anyURI }?)*
			}?,
			element relationships {
				(
					## instrinsic
					element threads {
						element data {
							attribute type { "thread" },
							attribute id { xsd:IDREF }
						}*
					}?
					| 
							## instrinsic
							element task {
								element data {
									attribute type { "task" },
									attribute id { xsd:IDREF }
								}
							}?)*
			}?
		}*,
		element event {
			attribute type { "event" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(
					## sequential number beginning at zero
					attribute historyEntry { xsd:positiveInteger }
					| 
							## date and time when it happened
							attribute datetime { xsd:dateTime }?
					| 
							## type of action completed
							attribute action {
								"Incomplete"
								| "AddVersion"
								| "DeleteVersion"
								| "AddThread"
								| "ResolveThread"
								| "DeleteThread"
								| "AddComment"
								| "DeleteComment"
								| "UpdatePassage"
								| "Ready"
								| "Assigned"
								| "Unassigned"
								| "TranscribeStart"
								| "TranscribeEnd"
								| "ReviewStart"
								| "ReviewEnd"
								| "HoldStart"
								| "HoldEnd"
								| "Upload"
								| "Complete"
							})*,
				
				## comments may need to be required for tasks placed on hold
				element comment { xsd:string }?
			}?,
			element relationships {
				(
					## intrinsic
					element set {
						element data {
							attribute type { "set" },
							attribute id { xsd:IDREF }
						}
					}?
					| element assignedUser {
								element data {
									attribute type { "user" },
									attribute id { xsd:IDREF }
								}
							}?
					| element agent {
								element data {
									attribute type { "user" },
									attribute id { xsd:IDREF }
								}
							}?)*
			}?
		}*,
		element book {
			attribute type { "book" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(attribute shortName { xsd:string }
					| attribute abbr { xsd:string }
					| attribute longName { xsd:string }
					| attribute index { xsd:nonNegativeInteger })*
			}?,
			element relationships {
				element sets {
					element data {
						attribute type { "set" },
						attribute id { xsd:IDREF }
					}*
				}?
			}?
		}*,
		element user {
			attribute type { "user" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				
				## unique user chosen name (without spaces)
				attribute userId { xsd:NCName },
				(element fullName { xsd:string }?
					| 
							## identity tokens are reuired (if present) and for admin users
							element identityToken { xsd:string }?
					| element transcriberSettings {
								(
									## BCP-47 value of UI language for transcriber
									attribute uiLanguageBcp47 {
										xsd:string { pattern = "[a-z]{2,3}(-[A-Za-z]{4})?(-[A-Z]{2})?(-[a-z]+)?" }
									}?
									| attribute timer { "countup" | "countdown" }?
									| 
											## percentage between 25 and 200 for playback
											attribute playBackSpeed {
												xsd:integer { minInclusive = "25" maxInclusive = "200" }
											}?
									| attribute progressBarType { "bar" | "waveform" }?)*,
								element hotKey {
									attribute hotKeyType { "play-pause" | "back" | "forward" | "slower" | "faster" },
									attribute keyCode { xsd:string }
								}*
							}?
					| element knownLanguages {
								xsd:string { pattern = "[a-z]{2,3}(-[A-Za-z]{4})?(-[A-Z]{2})?(-[a-z]+)?" }
							}*)*
			}?,
			element links {
				element avatarUrl { xsd:anyURI }?
			}?,
			element relationships {
				(element lastTranscriberProject {
						element data {
							attribute type { "project" },
							attribute id { xsd:IDREF }
						}
					}?
					| element lastTask {
								element data {
									attribute type { "task" },
									attribute id { xsd:IDREF }
								}
							}?
					| element assignedSets {
								element data {
									attribute type { "set" },
									attribute id { xsd:IDREF }
								}
							}*
					| element settings {
								element data {
									attribute type { "setting" },
									attribute id { xsd:IDREF }
								}*
							}?)*
			}?
		}+,
		element userProject {
			attribute type { "userProject" },
			attribute id { xsd:ID },
			element keys {
				attribute remoteId { xsd:ID }
			}?,
			element attributes {
				(attribute role { "admin" | "reviewer" | "transcriber" }
					| attribute fontFamily { xsd:string }?
					| attribute fontFeatures { xsd:string }?
					| attribute fontSize {
								"medium" | "xx-small" | "x-small" | "small" | "large" | "x-large" | "xx-large"
							}?)*
			}?,
			element relationships {
				(element user {
						element data {
							attribute type { "user" },
							attribute id { xsd:IDREF }
						}
					}?
					| element project {
								element data {
									attribute type { "project" },
									attribute id { xsd:IDREF }
								}
							}?)*
			}?
		}+,
		element transcriberMetadata {
			attribute type { "transcriberTypes" },
			
			## value must be 1
			attribute id { xsd:ID },
			element attributes {
				element roleValues {
					element value { xsd:NCName }+
				}?
				| element fontSizeValues {
							element value { xsd:NCName }+
						}?
				| element bookTypeValues {
							element value { xsd:NCName }+
						}?
				| element destinationValues {
							element value { xsd:NCName }+
						}?
				| element stateValues {
							element value { xsd:NCName }+
						}?
				| element textQualitValues {
							element value { xsd:NCName }+
						}?
				| element audioQualitValues {
							element value { xsd:NCName }+
						}?
				| element historyActionValues {
							element value { xsd:NCName }+
						}?
				| element timerValues {
							element value { xsd:NCName }+
						}?
				| element textQualitValues {
							element value { xsd:NCName }+
						}?
				| element hotKeyValues {
							element value { xsd:NCName }+
						}?
			}
		}
	}
